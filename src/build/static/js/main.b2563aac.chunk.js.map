{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticleList.js","components/CommentsList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ArticlePage.js","pages/NavBar.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticleList","map","article","key","className","to","substring","CommentsList","comments","comment","username","text","UpvoteSection","articleName","upvotes","setArticleInfo","id","onClick","a","async","fetch","method","result","json","body","upvoteArticle","AddCommentForm","useState","setUsername","commentText","setCommentText","type","value","onChange","event","target","rows","cols","JSON","stringify","headers","addComment","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","NavBar","ArticlesListPage","NotFoundPage","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2563aac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage=()=>(\r\n    <>\r\n        <h1>My Blog</h1>\r\n        <p>This describe the fragment demo component</p>\r\n        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n    </>\r\n)\r\n    \r\n    \r\n\r\n\r\nexport default HomePage\r\n","import React from 'react';\r\n\r\nconst AboutPage=()=>(\r\n    <>\r\n        <h1>About me</h1>\r\n        <p>This describe the fragment demo component</p>\r\n    </>\r\n)\r\n    \r\n    \r\n\r\n\r\nexport default AboutPage\r\n","const articles=[\r\n    {\r\n        name:'learn-react',\r\n        title:\"The Fast way to learn React\",\r\n        content:[\r\n            `React is a way to build user interfaces. It is only concerned with what you see on the front-end. React makes user interfaces very easy to build by cutting each page into pieces. We call these pieces components.`,\r\n            `We will build a small game during this tutorial. You might be tempted to skip it because you’re not building games — but give it a chance. The techniques you’ll learn in the tutorial are fundamental to building any React app, and mastering it will give you a deep understanding of React.`\r\n        ]\r\n    },\r\n    {\r\n        name:'learn-node',\r\n        title:\"How to build a Node server in 10 Minutes\",\r\n        content:[\r\n            `Create a Folder name todoListApi - mkdir todoListApi\r\n\r\n            Navigate to the root of your newly created folder - cd todoListApi\r\n            \r\n            Create a package.json file - npm init\r\n            Package.json is a file that gives the necessary information to npm which allows it to identify the project as well as handle the project's dependencies.\r\n            npm init will prompt you to enter some information such as the app name, description, version, author, keyword and also ask if what you see is what you like.\r\n            You should have something like this eventually.`,\r\n            `Let's install express and nodmon, express will be used to create the server while nodmon will help us to keep track of changes to our application by watching changed files and automatically restart the server.`\r\n        ]\r\n    },\r\n    {\r\n        name:'my-thoughts-on-resumes',\r\n        title:\"My Thoughts on Resumes\",\r\n        content:[\r\n            `The most important tool you have on a resume is language.” “Not every single broke and unemployed person needs a job; some need customers.” “A huge number of jobs that are filled are never advertised to the public, or if they are, they're filled by people who have a connection to the employer.`,\r\n            `t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`\r\n        ]\r\n    }\r\n];\r\nexport default articles;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst ArticleList=({articles})=>(\r\n    <>\r\n\r\n    {\r\n        articles.map((article,key)=>(\r\n            <Link className=\"article-list-item\"   key={key} to={`/article/${article.name}`}>\r\n                 <h3>{article.title}</h3>\r\n                 <p>{article.content[0].substring(0,150)}...</p>\r\n            </Link>\r\n            \r\n        ))\r\n    }\r\n    </>\r\n);\r\n\r\nexport default ArticleList","import React from 'react';\r\n\r\nconst CommentsList=({comments})=>(\r\n     <>\r\n    \r\n        <h3>Comments:</h3>\r\n        {\r\n        comments.map((comment,key) =>(\r\n            <div className=\"comment\" key={key}>\r\n              <h4>{comment.username}</h4>\r\n              <p>{comment.text}</p>\r\n            </div>\r\n        ))\r\n        }\r\n\r\n    </>\r\n)\r\n\r\nexport default CommentsList\r\n\r\n","import React from 'react'\r\n\r\nconst UpvoteSection=({articleName,upvotes,setArticleInfo})=> {\r\n\r\n    const upvoteArticle=async ()=>{\r\n       const result= await fetch (`/api/articles/${articleName}/upvote`,{\r\n            method:'post'\r\n        });\r\n        const body=await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n\r\n    <div id=\"upvotes-section\">\r\n    <button onClick={()=>upvoteArticle()}>Add Upvote</button>\r\n    <p>This post has been upvoted {upvotes} times</p>\r\n    </div>\r\n \r\n)\r\n    \r\n\r\n\r\n};\r\n    \r\n\r\nexport default UpvoteSection","import React,{useState} from 'react'\r\n\r\nconst AddCommentForm=({articleName,setArticleInfo})=> {\r\n    const [username,setUsername]=useState('');\r\n    const [commentText,setCommentText]=useState('');\r\n    const addComment=async()=>{\r\n        const result=await fetch(`/api/articles/${articleName}/add-comment`,{\r\n            method:'post',\r\n            body:JSON.stringify({username, text: commentText}),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        })\r\n        const body=await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n    return(\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input type=\"text\" value={username}  onChange={(event)=>setUsername(event.target.value)}/>\r\n            </label>\r\n            <label>\r\n                Comment:\r\n                {/* <input type=\"text\" /> */}\r\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event)=>setCommentText(event.target.value)}/>\r\n            </label>\r\n            \r\n            <button onClick={()=>addComment()}>Add comment</button>\r\n        </div>\r\n    );\r\n\r\n    }\r\nexport default AddCommentForm;\r\n","import React,{useState,useEffect} from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticleList from '../components/ArticleList';\r\nimport NotFoundPage from '../components/ArticleList'\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvoteSection from '../components/UpvoteSection';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\n\r\nconst ArticlePage=({match})=>{\r\n    const name=match.params.name;\r\n    const article=articleContent.find(article =>article.name===name);\r\n    const [articleInfo,setArticleInfo]=useState({\r\n      upvotes:0,comments:[]\r\n    })\r\n    useEffect(()=>{\r\n      const fetchData=async()=>{\r\n        const result= await fetch(`/api/articles/${name}`);\r\n        const body= await result.json();\r\n        console.log(body);\r\n        setArticleInfo(body);\r\n      }\r\n      fetchData();\r\n        \r\n    },[name]);\r\n\r\n\r\n    if(!article) return <NotFoundPage/>\r\n    const otherArticles=articleContent.filter(article=>article.name !== name)\r\n\r\n  return (\r\n    <>\r\n    <h1>{article.title} </h1> \r\n    <UpvoteSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}   />\r\n    {\r\n    article.content.map((paragraph,key)=>(\r\n    <p key={key}> {paragraph}  </p>\r\n    ))\r\n    }\r\n    <CommentsList comments={articleInfo.comments}/>\r\n    <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n    <h3>Other Articles</h3>\r\n    <ArticleList articles={otherArticles}/>\r\n       </>\r\n  );\r\n    \r\n}\r\n    \r\n\r\n\r\nexport default ArticlePage\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nconst NavBar=()=>(\r\n    <nav>\r\n    <ul>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/about\">About</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/articles-list\">Articles</Link>\r\n        </li>\r\n    </ul>\r\n\r\n    </nav>\r\n);\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport articleContent from './article-content';\r\n\r\nimport ArticleList from '../components/ArticleList'\r\nconst ArticlesListPage=()=>(\r\n    <>\r\n        <h1>Articles List</h1>\r\n       <ArticleList articles={articleContent}/>\r\n    </>\r\n)\r\n    \r\n    \r\n\r\n\r\nexport default ArticlesListPage\r\n","import React from 'react';\r\n\r\nconst NotFoundPage=()=>(\r\n\r\n    <h1>404: Page Not Found</h1>\r\n\r\n\r\n) \r\n\r\nexport default NotFoundPage\r\n","import React from 'react';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage'\nimport AboutPage from './pages/AboutPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './pages/NavBar';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar/>\n      <div id=\"page-body\">\n\n        <Switch>\n           <Route path=\"/\" component={HomePage} exact/>\n           <Route path=\"/about\" component={AboutPage}/>\n           <Route path=\"/articles-list\" component={ArticlesListPage}/>\n           <Route path=\"/article/:name\" component={ArticlePage}/>\n           <Route component={NotFoundPage}/>\n        </Switch>\n          \n      </div>\n          \n           \n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}